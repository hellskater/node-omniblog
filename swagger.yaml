tags:
  - name: auth
    description: auth API

paths:
  # [POST] login
  /login:
    post:
      tags:
        - auth
      summary: Login
      parameters:
        - name: body
          in: body
          description: user Data
          required: true
          schema:
            $ref: '#/definitions/users-login'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [POST] signup
  /signup:
    post:
      tags:
        - auth
      summary: Signup
      parameters:
        - name: body
          in: body
          description: user Data
          required: true
          schema:
            $ref: '#/definitions/users-signup'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [POST] refresh
  /refresh:
    post:
      tags:
        - auth
      summary: Refresh Token
      parameters:
        - name: RefreshAuthorization
          in: header
          description: Bearer refresh token
          required: true
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # Docs for posts route

  # [GET] posts
  /posts:
    get:
      tags:
        - posts
      summary: Find All Posts
      parameters:
        - name: Authorization
          in: header
          description: Bearer token
          required: true
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

    # [POST] posts
    post:
      tags:
        - posts
      summary: Add Post
      parameters:
        - name: body
          in: body
          description: post Data
          required: true
          schema:
            $ref: '#/definitions/posts'
        - name: Authorization
          in: header
          description: Bearer token
          required: true
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [GET] posts/author
  /posts/author:
    get:
      tags:
        - posts
      summary: Find All Posts By Author
      parameters:
        - name: Authorization
          in: header
          description: Bearer token
          required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# definitions
definitions:
  users-login:
    type: object
    required:
      - email
      - password
    properties:
      email:
        type: string
        description: user Email
      password:
        type: string
        description: user Password

  users-signup:
    type: object
    required:
      - email
      - password
      - name
      - logo
    properties:
      email:
        type: string
        description: user Email
      password:
        type: string
        description: user Password
      name:
        type: string
        description: user Name
      logo:
        type: string
        description: user Logo

  posts:
    type: object
    required:
      - title
      - content
    properties:
      title:
        type: string
        description: post Title
      content:
        type: string
        description: post Content

securityDefinitions:
  bearerAuth:
    type: token
    name: Authorization
    in: header

schemes:
  - https
  - http
